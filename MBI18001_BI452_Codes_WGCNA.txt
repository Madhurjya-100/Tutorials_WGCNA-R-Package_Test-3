> singleBlockMEs = moduleEigengenes(datExpr, moduleColors)$eigengenes;
> blockwiseMEs = moduleEigengenes(datExpr, bwModuleColors)$eigengenes;
> single2blockwise = match(names(singleBlockMEs), names(blockwiseMEs))
> signif(diag(cor(blockwiseMEs[, single2blockwise], singleBlockMEs)), 3)
       MEblack         MEblue 
         0.999          1.000 
       MEbrown         MEcyan 
         0.987          0.999 
       MEgreen  MEgreenyellow 
         0.998          1.000 
        MEgrey       MEgrey60 
         0.963          0.999 
   MElightcyan   MElightgreen 
         0.993          1.000 
     MEmagenta MEmidnightblue 
         1.000          0.999 
        MEpink       MEpurple 
         0.971          0.998 
         MEred       MEsalmon 
         0.973          0.998 
         MEtan    MEturquoise 
         0.991          0.993 
      MEyellow 
         0.995 
> signif(diag(cor(blockwiseMEs[, single2blockwise], singleBlockMEs)), 3)
       MEblack         MEblue 
         0.999          1.000 
       MEbrown         MEcyan 
         0.987          0.999 
       MEgreen  MEgreenyellow 
         0.998          1.000 
        MEgrey       MEgrey60 
         0.963          0.999 
   MElightcyan   MElightgreen 
         0.993          1.000 
     MEmagenta MEmidnightblue 
         1.000          0.999 
        MEpink       MEpurple 
         0.971          0.998 
         MEred       MEsalmon 
         0.973          0.998 
         MEtan    MEturquoise 
         0.991          0.993 
      MEyellow 
         0.995 
> lnames = load(file = "FemaleLiver-02-networkConstruction-auto.RData");
> lnames
[1] "MEs"          "moduleLabels"
[3] "moduleColors" "geneTree"    
> nGenes = ncol(datExpr);
> nSamples = nrow(datExpr);
> MEs0 = moduleEigengenes(datExpr, moduleColors)$eigengenes
> MEs = orderMEs(MEs0)
> moduleTraitCor = cor(MEs, datTraits, use = "p");
> moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples);
> sizeGrWindow(10,6)
NULL
> textMatrix = paste(signif(moduleTraitCor, 2), "\n(",
+                    signif(moduleTraitPvalue, 1), ")", sep = "");
> dim(textMatrix) = dim(moduleTraitCor)
> par(mar = c(6, 8.5, 3, 3));
> labeledHeatmap(Matrix = moduleTraitCor,
+                xLabels = names(datTraits),
+                yLabels = names(MEs),
+                ySymbols = names(MEs),
+                colorLabels = FALSE,
+                colors = greenWhiteRed(50),
+                textMatrix = textMatrix,
+                setStdMargins = FALSE,
+                cex.text = 0.5,
+                zlim = c(-1,1),
+                main = paste("Module-trait relationships"))
Warning message:
In greenWhiteRed(50) :
  WGCNA::greenWhiteRed: this palette is not suitable for people
with green-red color blindness (the most common kind of color blindness).
Consider using the function blueWhiteRed instead.
> weight = as.data.frame(datTraits$weight_g);
> names(weight) = "weight"
> modNames = substring(names(MEs), 3)
> 
> geneModuleMembership = as.data.frame(cor(datExpr, MEs, use = "p"));
> MMPvalue = as.data.frame(corPvalueStudent(as.matrix(geneModuleMembership), nSamples));
> names(geneModuleMembership) = paste("MM", modNames, sep="");
> names(MMPvalue) = paste("p.MM", modNames, sep="");
> 
> geneTraitSignificance = as.data.frame(cor(datExpr, weight, use = "p"));
> GSPvalue = as.data.frame(corPvalueStudent(as.matrix(geneTraitSignificance), nSamples));
> 
> names(geneTraitSignificance) = paste("GS.", names(weight), sep="");
> names(GSPvalue) = paste("p.GS.", names(weight), sep="");
> module = "brown"
> column = match(module, modNames);
> moduleGenes = moduleColors==module;
> 
> sizeGrWindow(7, 7);
NULL
> par(mfrow = c(1,1));
> verboseScatterplot(abs(geneModuleMembership[moduleGenes, column]),
+ abs(geneTraitSignificance[moduleGenes, 1]),
+ xlab = paste("Module Membership in", module, "module"),
+ ylab = "Gene significance for body weight",
+ main = paste("Module membership vs. gene significance\n"),
+ cex.main = 1.2, cex.lab = 1.2, cex.axis = 1.2, col = module)
> names(datExpr)
   [1] "MMT00000044" "MMT00000046"
   [3] "MMT00000051" "MMT00000076"
   [5] "MMT00000080" "MMT00000102"
   [7] "MMT00000149" "MMT00000159"
   [9] "MMT00000207" "MMT00000212"
  [11] "MMT00000231" "MMT00000241"
  [13] "MMT00000268" "MMT00000283"
  [15] "MMT00000334" "MMT00000365"
  [17] "MMT00000368" "MMT00000373"
  [19] "MMT00000384" "MMT00000401"
  [21] "MMT00000418" "MMT00000464"
  [23] "MMT00000517" "MMT00000525"
  [25] "MMT00000549" "MMT00000550"
  [27] "MMT00000602" "MMT00000608"
  [29] "MMT00000701" "MMT00000713"
  [31] "MMT00000719" "MMT00000743"
  [33] "MMT00000792" "MMT00000793"
  [35] "MMT00000801" "MMT00000840"
  [37] "MMT00000864" "MMT00000887"
  [39] "MMT00000963" "MMT00000988"
  [41] "MMT00000996" "MMT00001022"
  [43] "MMT00001077" "MMT00001085"
  [45] "MMT00001100" "MMT00001110"
  [47] "MMT00001154" "MMT00001185"
  [49] "MMT00001190" "MMT00001245"
  [51] "MMT00001260" "MMT00001291"
  [53] "MMT00001298" "MMT00001318"
  [55] "MMT00001373" "MMT00001387"
  [57] "MMT00001394" "MMT00001397"
  [59] "MMT00001423" "MMT00001434"
  [61] "MMT00001486" "MMT00001496"
  [63] "MMT00001510" "MMT00001545"
  [65] "MMT00001555" "MMT00001587"
  [67] "MMT00001596" "MMT00001613"
  [69] "MMT00001646" "MMT00001675"
  [71] "MMT00001698" "MMT00001714"
  [73] "MMT00001732" "MMT00001791"
  [75] "MMT00001806" "MMT00001923"
  [77] "MMT00001947" "MMT00001949"
  [79] "MMT00001995" "MMT00002002"
  [81] "MMT00002004" "MMT00002021"
  [83] "MMT00002022" "MMT00002037"
  [85] "MMT00002042" "MMT00002046"
  [87] "MMT00002048" "MMT00002050"
  [89] "MMT00002099" "MMT00002102"
  [91] "MMT00002151" "MMT00002160"
  [93] "MMT00002161" "MMT00002175"
  [95] "MMT00002209" "MMT00002227"
  [97] "MMT00002238" "MMT00002272"
  [99] "MMT00002304" "MMT00002330"
 [101] "MMT00002338" "MMT00002391"
 [103] "MMT00002392" "MMT00002494"
 [105] "MMT00002521" "MMT00002529"
 [107] "MMT00002532" "MMT00002546"
 [109] "MMT00002575" "MMT00002592"
 [111] "MMT00002594" "MMT00002597"
 [113] "MMT00002655" "MMT00002755"
 [115] "MMT00002758" "MMT00002824"
 [117] "MMT00002875" "MMT00002932"
 [119] "MMT00002956" "MMT00003016"
 [121] "MMT00003058" "MMT00003069"
 [123] "MMT00003071" "MMT00003081"
 [125] "MMT00003107" "MMT00003127"
 [127] "MMT00003136" "MMT00003188"
 [129] "MMT00003211" "MMT00003214"
 [131] "MMT00003278" "MMT00003342"
 [133] "MMT00003365" "MMT00003391"
 [135] "MMT00003410" "MMT00003424"
 [137] "MMT00003453" "MMT00003456"
 [139] "MMT00003470" "MMT00003498"
 [141] "MMT00003506" "MMT00003530"
 [143] "MMT00003533" "MMT00003545"
 [145] "MMT00003569" "MMT00003575"
 [147] "MMT00003586" "MMT00003596"
 [149] "MMT00003620" "MMT00003651"
 [151] "MMT00003672" "MMT00003724"
 [153] "MMT00003764" "MMT00003905"
 [155] "MMT00003906" "MMT00003908"
 [157] "MMT00003950" "MMT00003968"
 [159] "MMT00003970" "MMT00003975"
 [161] "MMT00003980" "MMT00003982"
 [163] "MMT00003994" "MMT00004034"
 [165] "MMT00004086" "MMT00004126"
 [167] "MMT00004142" "MMT00004170"
 [169] "MMT00004171" "MMT00004172"
 [171] "MMT00004176" "MMT00004227"
 [173] "MMT00004230" "MMT00004254"
 [175] "MMT00004264" "MMT00004276"
 [177] "MMT00004283" "MMT00004326"
 [179] "MMT00004393" "MMT00004394"
 [181] "MMT00004397" "MMT00004398"
 [183] "MMT00004408" "MMT00004428"
 [185] "MMT00004455" "MMT00004520"
 [187] "MMT00004524" "MMT00004529"
 [189] "MMT00004594" "MMT00004605"
 [191] "MMT00004614" "MMT00004625"
 [193] "MMT00004631" "MMT00004639"
 [195] "MMT00004671" "MMT00004682"
 [197] "MMT00004703" "MMT00004721"
 [199] "MMT00004807" "MMT00004841"
 [201] "MMT00004844" "MMT00004855"
 [203] "MMT00004881" "MMT00004888"
 [205] "MMT00004895" "MMT00004929"
 [207] "MMT00004959" "MMT00004963"
 [209] "MMT00004979" "MMT00004983"
 [211] "MMT00005019" "MMT00005030"
 [213] "MMT00005050" "MMT00005069"
 [215] "MMT00005139" "MMT00005166"
 [217] "MMT00005179" "MMT00005189"
 [219] "MMT00005210" "MMT00005211"
 [221] "MMT00005215" "MMT00005229"
 [223] "MMT00005236" "MMT00005285"
 [225] "MMT00005318" "MMT00005418"
 [227] "MMT00005452" "MMT00005462"
 [229] "MMT00005471" "MMT00005501"
 [231] "MMT00005527" "MMT00005542"
 [233] "MMT00005561" "MMT00005617"
 [235] "MMT00005618" "MMT00005626"
 [237] "MMT00005653" "MMT00005687"
 [239] "MMT00005722" "MMT00005727"
 [241] "MMT00005744" "MMT00005757"
 [243] "MMT00005801" "MMT00005835"
 [245] "MMT00005846" "MMT00005900"
 [247] "MMT00005990" "MMT00006001"
 [249] "MMT00006013" "MMT00006048"
 [251] "MMT00006077" "MMT00006095"
 [253] "MMT00006097" "MMT00006142"
 [255] "MMT00006144" "MMT00006194"
 [257] "MMT00006230" "MMT00006250"
 [259] "MMT00006257" "MMT00006263"
 [261] "MMT00006300" "MMT00006315"
 [263] "MMT00006338" "MMT00006374"
 [265] "MMT00006378" "MMT00006387"
 [267] "MMT00006397" "MMT00006398"
 [269] "MMT00006408" "MMT00006429"
 [271] "MMT00006430" "MMT00006479"
 [273] "MMT00006491" "MMT00006515"
 [275] "MMT00006538" "MMT00006539"
 [277] "MMT00006545" "MMT00006645"
 [279] "MMT00006662" "MMT00006684"
 [281] "MMT00006700" "MMT00006705"
 [283] "MMT00006709" "MMT00006710"
 [285] "MMT00006713" "MMT00006763"
 [287] "MMT00006794" "MMT00006811"
 [289] "MMT00006822" "MMT00006859"
 [291] "MMT00006881" "MMT00006888"
 [293] "MMT00006913" "MMT00006957"
 [295] "MMT00006981" "MMT00007042"
 [297] "MMT00007048" "MMT00007049"
 [299] "MMT00007117" "MMT00007190"
 [301] "MMT00007193" "MMT00007204"
 [303] "MMT00007205" "MMT00007217"
 [305] "MMT00007222" "MMT00007272"
 [307] "MMT00007274" "MMT00007275"
 [309] "MMT00007277" "MMT00007297"
 [311] "MMT00007300" "MMT00007321"
 [313] "MMT00007326" "MMT00007361"
 [315] "MMT00007367" "MMT00007407"
 [317] "MMT00007426" "MMT00007430"
 [319] "MMT00007435" "MMT00007440"
 [321] "MMT00007454" "MMT00007538"
 [323] "MMT00007603" "MMT00007643"
 [325] "MMT00007657" "MMT00007700"
 [327] "MMT00007709" "MMT00007723"
 [329] "MMT00007748" "MMT00007780"
 [331] "MMT00007789" "MMT00007805"
 [333] "MMT00007811" "MMT00007834"
 [335] "MMT00007836" "MMT00007845"
 [337] "MMT00007847" "MMT00007859"
 [339] "MMT00007875" "MMT00007878"
 [341] "MMT00007895" "MMT00007902"
 [343] "MMT00007963" "MMT00007967"
 [345] "MMT00007970" "MMT00007987"
 [347] "MMT00007992" "MMT00007995"
 [349] "MMT00007996" "MMT00008036"
 [351] "MMT00008045" "MMT00008094"
 [353] "MMT00008113" "MMT00008140"
 [355] "MMT00008162" "MMT00008163"
 [357] "MMT00008174" "MMT00008176"
 [359] "MMT00008184" "MMT00008207"
 [361] "MMT00008266" "MMT00008290"
 [363] "MMT00008299" "MMT00008438"
 [365] "MMT00008447" "MMT00008457"
 [367] "MMT00008463" "MMT00008523"
 [369] "MMT00008527" "MMT00008548"
 [371] "MMT00008578" "MMT00008587"
 [373] "MMT00008598" "MMT00008600"
 [375] "MMT00008668" "MMT00008688"
 [377] "MMT00008691" "MMT00008697"
 [379] "MMT00008781" "MMT00008782"
 [381] "MMT00008789" "MMT00008862"
 [383] "MMT00008892" "MMT00008908"
 [385] "MMT00008909" "MMT00008968"
 [387] "MMT00008970" "MMT00008988"
 [389] "MMT00008996" "MMT00009011"
 [391] "MMT00009097" "MMT00009113"
 [393] "MMT00009144" "MMT00009216"
 [395] "MMT00009263" "MMT00009272"
 [397] "MMT00009278" "MMT00009295"
 [399] "MMT00009297" "MMT00009301"
 [401] "MMT00009302" "MMT00009303"
 [403] "MMT00009305" "MMT00009315"
 [405] "MMT00009353" "MMT00009359"
 [407] "MMT00009375" "MMT00009398"
 [409] "MMT00009432" "MMT00009436"
 [411] "MMT00009488" "MMT00009498"
 [413] "MMT00009506" "MMT00009536"
 [415] "MMT00009560" "MMT00009572"
 [417] "MMT00009589" "MMT00009596"
 [419] "MMT00009632" "MMT00009646"
 [421] "MMT00009668" "MMT00009670"
 [423] "MMT00009690" "MMT00009695"
 [425] "MMT00009702" "MMT00009718"
 [427] "MMT00009727" "MMT00009738"
 [429] "MMT00009824" "MMT00009857"
 [431] "MMT00009904" "MMT00009927"
 [433] "MMT00009929" "MMT00009945"
 [435] "MMT00009951" "MMT00009952"
 [437] "MMT00010000" "MMT00010003"
 [439] "MMT00010083" "MMT00010131"
 [441] "MMT00010153" "MMT00010159"
 [443] "MMT00010174" "MMT00010185"
 [445] "MMT00010199" "MMT00010209"
 [447] "MMT00010294" "MMT00010332"
 [449] "MMT00010337" "MMT00010339"
 [451] "MMT00010351" "MMT00010410"
 [453] "MMT00010412" "MMT00010417"
 [455] "MMT00010441" "MMT00010454"
 [457] "MMT00010456" "MMT00010490"
 [459] "MMT00010493" "MMT00010506"
 [461] "MMT00010509" "MMT00010511"
 [463] "MMT00010512" "MMT00010513"
 [465] "MMT00010542" "MMT00010595"
 [467] "MMT00010602" "MMT00010683"
 [469] "MMT00010818" "MMT00010823"
 [471] "MMT00010830" "MMT00010854"
 [473] "MMT00010861" "MMT00010863"
 [475] "MMT00010873" "MMT00010888"
 [477] "MMT00010898" "MMT00010907"
 [479] "MMT00010910" "MMT00010911"
 [481] "MMT00010952" "MMT00010973"
 [483] "MMT00010988" "MMT00010990"
 [485] "MMT00011008" "MMT00011089"
 [487] "MMT00011091" "MMT00011135"
 [489] "MMT00011141" "MMT00011143"
 [491] "MMT00011154" "MMT00011218"
 [493] "MMT00011219" "MMT00011231"
 [495] "MMT00011246" "MMT00011257"
 [497] "MMT00011268" "MMT00011281"
 [499] "MMT00011286" "MMT00011289"
 [501] "MMT00011316" "MMT00011337"
 [503] "MMT00011359" "MMT00011361"
 [505] "MMT00011362" "MMT00011386"
 [507] "MMT00011436" "MMT00011445"
 [509] "MMT00011446" "MMT00011464"
 [511] "MMT00011470" "MMT00011486"
 [513] "MMT00011503" "MMT00011514"
 [515] "MMT00011541" "MMT00011559"
 [517] "MMT00011590" "MMT00011614"
 [519] "MMT00011644" "MMT00011731"
 [521] "MMT00011790" "MMT00011799"
 [523] "MMT00011814" "MMT00011832"
 [525] "MMT00011856" "MMT00011876"
 [527] "MMT00011887" "MMT00011900"
 [529] "MMT00011906" "MMT00011921"
 [531] "MMT00011934" "MMT00011935"
 [533] "MMT00011949" "MMT00011968"
 [535] "MMT00012016" "MMT00012023"
 [537] "MMT00012066" "MMT00012112"
 [539] "MMT00012128" "MMT00012141"
 [541] "MMT00012202" "MMT00012203"
 [543] "MMT00012250" "MMT00012270"
 [545] "MMT00012280" "MMT00012288"
 [547] "MMT00012289" "MMT00012307"
 [549] "MMT00012369" "MMT00012375"
 [551] "MMT00012401" "MMT00012404"
 [553] "MMT00012409" "MMT00012431"
 [555] "MMT00012463" "MMT00012502"
 [557] "MMT00012511" "MMT00012512"
 [559] "MMT00012521" "MMT00012535"
 [561] "MMT00012536" "MMT00012544"
 [563] "MMT00012566" "MMT00012632"
 [565] "MMT00012639" "MMT00012666"
 [567] "MMT00012675" "MMT00012683"
 [569] "MMT00012773" "MMT00012783"
 [571] "MMT00012805" "MMT00012889"
 [573] "MMT00012891" "MMT00012901"
 [575] "MMT00012906" "MMT00012924"
 [577] "MMT00012959" "MMT00012971"
 [579] "MMT00012989" "MMT00012992"
 [581] "MMT00013001" "MMT00013033"
 [583] "MMT00013041" "MMT00013066"
 [585] "MMT00013096" "MMT00013100"
 [587] "MMT00013122" "MMT00013125"
 [589] "MMT00013135" "MMT00013152"
 [591] "MMT00013155" "MMT00013170"
 [593] "MMT00013188" "MMT00013190"
 [595] "MMT00013203" "MMT00013217"
 [597] "MMT00013227" "MMT00013326"
 [599] "MMT00013327" "MMT00013380"
 [601] "MMT00013381" "MMT00013398"
 [603] "MMT00013402" "MMT00013477"
 [605] "MMT00013489" "MMT00013496"
 [607] "MMT00013499" "MMT00013549"
 [609] "MMT00013585" "MMT00013638"
 [611] "MMT00013656" "MMT00013704"
 [613] "MMT00013759" "MMT00013788"
 [615] "MMT00013799" "MMT00013815"
 [617] "MMT00013831" "MMT00013851"
 [619] "MMT00013854" "MMT00013918"
 [621] "MMT00013936" "MMT00013951"
 [623] "MMT00013980" "MMT00013996"
 [625] "MMT00014056" "MMT00014132"
 [627] "MMT00014191" "MMT00014216"
 [629] "MMT00014225" "MMT00014231"
 [631] "MMT00014249" "MMT00014269"
 [633] "MMT00014287" "MMT00014327"
 [635] "MMT00014329" "MMT00014330"
 [637] "MMT00014332" "MMT00014406"
 [639] "MMT00014416" "MMT00014421"
 [641] "MMT00014444" "MMT00014558"
 [643] "MMT00014573" "MMT00014630"
 [645] "MMT00014634" "MMT00014725"
 [647] "MMT00014730" "MMT00014774"
 [649] "MMT00014813" "MMT00014817"
 [651] "MMT00014842" "MMT00014877"
 [653] "MMT00014892" "MMT00014927"
 [655] "MMT00014928" "MMT00014940"
 [657] "MMT00015015" "MMT00015021"
 [659] "MMT00015100" "MMT00015110"
 [661] "MMT00015180" "MMT00015196"
 [663] "MMT00015199" "MMT00015204"
 [665] "MMT00015218" "MMT00015256"
 [667] "MMT00015274" "MMT00015289"
 [669] "MMT00015303" "MMT00015334"
 [671] "MMT00015380" "MMT00015388"
 [673] "MMT00015391" "MMT00015397"
 [675] "MMT00015439" "MMT00015440"
 [677] "MMT00015441" "MMT00015463"
 [679] "MMT00015515" "MMT00015524"
 [681] "MMT00015525" "MMT00015534"
 [683] "MMT00015544" "MMT00015548"
 [685] "MMT00015549" "MMT00015551"
 [687] "MMT00015563" "MMT00015571"
 [689] "MMT00015576" "MMT00015583"
 [691] "MMT00015590" "MMT00015593"
 [693] "MMT00015606" "MMT00015626"
 [695] "MMT00015632" "MMT00015654"
 [697] "MMT00015662" "MMT00015674"
 [699] "MMT00015731" "MMT00015774"
 [701] "MMT00015827" "MMT00015851"
 [703] "MMT00015864" "MMT00015935"
 [705] "MMT00015943" "MMT00015966"
 [707] "MMT00015970" "MMT00015971"
 [709] "MMT00015986" "MMT00016000"
 [711] "MMT00016001" "MMT00016022"
 [713] "MMT00016033" "MMT00016084"
 [715] "MMT00016096" "MMT00016133"
 [717] "MMT00016157" "MMT00016194"
 [719] "MMT00016198" "MMT00016217"
 [721] "MMT00016242" "MMT00016245"
 [723] "MMT00016275" "MMT00016306"
 [725] "MMT00016330" "MMT00016342"
 [727] "MMT00016374" "MMT00016413"
 [729] "MMT00016442" "MMT00016457"
 [731] "MMT00016581" "MMT00016621"
 [733] "MMT00016637" "MMT00016640"
 [735] "MMT00016669" "MMT00016671"
 [737] "MMT00016682" "MMT00016697"
 [739] "MMT00016717" "MMT00016725"
 [741] "MMT00016764" "MMT00016788"
 [743] "MMT00016824" "MMT00016835"
 [745] "MMT00016852" "MMT00016856"
 [747] "MMT00016938" "MMT00016958"
 [749] "MMT00016975" "MMT00016980"
 [751] "MMT00016981" "MMT00016989"
 [753] "MMT00017035" "MMT00017044"
 [755] "MMT00017112" "MMT00017147"
 [757] "MMT00017157" "MMT00017186"
 [759] "MMT00017188" "MMT00017203"
 [761] "MMT00017256" "MMT00017294"
 [763] "MMT00017308" "MMT00017340"
 [765] "MMT00017411" "MMT00017420"
 [767] "MMT00017421" "MMT00017441"
 [769] "MMT00017456" "MMT00017461"
 [771] "MMT00017480" "MMT00017484"
 [773] "MMT00017513" "MMT00017539"
 [775] "MMT00017636" "MMT00017674"
 [777] "MMT00017718" "MMT00017766"
 [779] "MMT00017837" "MMT00017855"
 [781] "MMT00017876" "MMT00017882"
 [783] "MMT00017895" "MMT00017950"
 [785] "MMT00017989" "MMT00018029"
 [787] "MMT00018038" "MMT00018071"
 [789] "MMT00018081" "MMT00018085"
 [791] "MMT00018106" "MMT00018149"
 [793] "MMT00018170" "MMT00018202"
 [795] "MMT00018234" "MMT00018235"
 [797] "MMT00018239" "MMT00018265"
 [799] "MMT00018269" "MMT00018272"
 [801] "MMT00018289" "MMT00018296"
 [803] "MMT00018319" "MMT00018332"
 [805] "MMT00018346" "MMT00018374"
 [807] "MMT00018479" "MMT00018482"
 [809] "MMT00018485" "MMT00018499"
 [811] "MMT00018506" "MMT00018532"
 [813] "MMT00018534" "MMT00018535"
 [815] "MMT00018537" "MMT00018540"
 [817] "MMT00018606" "MMT00018607"
 [819] "MMT00018639" "MMT00018643"
 [821] "MMT00018689" "MMT00018797"
 [823] "MMT00018824" "MMT00018843"
 [825] "MMT00018850" "MMT00018890"
 [827] "MMT00018899" "MMT00018925"
 [829] "MMT00018931" "MMT00019020"
 [831] "MMT00019029" "MMT00019032"
 [833] "MMT00019063" "MMT00019072"
 [835] "MMT00019091" "MMT00019118"
 [837] "MMT00019132" "MMT00019167"
 [839] "MMT00019174" "MMT00019176"
 [841] "MMT00019191" "MMT00019201"
 [843] "MMT00019204" "MMT00019208"
 [845] "MMT00019212" "MMT00019254"
 [847] "MMT00019257" "MMT00019266"
 [849] "MMT00019286" "MMT00019310"
 [851] "MMT00019333" "MMT00019405"
 [853] "MMT00019447" "MMT00019471"
 [855] "MMT00019497" "MMT00019519"
 [857] "MMT00019546" "MMT00019554"
 [859] "MMT00019640" "MMT00019641"
 [861] "MMT00019672" "MMT00019697"
 [863] "MMT00019699" "MMT00019744"
 [865] "MMT00019803" "MMT00019818"
 [867] "MMT00019845" "MMT00019932"
 [869] "MMT00019943" "MMT00019997"
 [871] "MMT00019999" "MMT00020013"
 [873] "MMT00020032" "MMT00020051"
 [875] "MMT00020073" "MMT00020088"
 [877] "MMT00020107" "MMT00020113"
 [879] "MMT00020148" "MMT00020288"
 [881] "MMT00020295" "MMT00020302"
 [883] "MMT00020330" "MMT00020363"
 [885] "MMT00020368" "MMT00020374"
 [887] "MMT00020421" "MMT00020454"
 [889] "MMT00020473" "MMT00020551"
 [891] "MMT00020565" "MMT00020566"
 [893] "MMT00020568" "MMT00020582"
 [895] "MMT00020591" "MMT00020598"
 [897] "MMT00020602" "MMT00020626"
 [899] "MMT00020632" "MMT00020651"
 [901] "MMT00020659" "MMT00020697"
 [903] "MMT00020710" "MMT00020711"
 [905] "MMT00020720" "MMT00020761"
 [907] "MMT00020764" "MMT00020770"
 [909] "MMT00020822" "MMT00020839"
 [911] "MMT00020843" "MMT00020883"
 [913] "MMT00020926" "MMT00020962"
 [915] "MMT00020969" "MMT00020996"
 [917] "MMT00021004" "MMT00021027"
 [919] "MMT00021039" "MMT00021045"
 [921] "MMT00021077" "MMT00021087"
 [923] "MMT00021090" "MMT00021096"
 [925] "MMT00021101" "MMT00021110"
 [927] "MMT00021143" "MMT00021232"
 [929] "MMT00021266" "MMT00021275"
 [931] "MMT00021297" "MMT00021360"
 [933] "MMT00021364" "MMT00021394"
 [935] "MMT00021424" "MMT00021492"
 [937] "MMT00021508" "MMT00021600"
 [939] "MMT00021613" "MMT00021626"
 [941] "MMT00021643" "MMT00021649"
 [943] "MMT00021652" "MMT00021725"
 [945] "MMT00021727" "MMT00021734"
 [947] "MMT00021743" "MMT00021763"
 [949] "MMT00021771" "MMT00021784"
 [951] "MMT00021805" "MMT00021815"
 [953] "MMT00021830" "MMT00021854"
 [955] "MMT00021912" "MMT00021925"
 [957] "MMT00022024" "MMT00022067"
 [959] "MMT00022068" "MMT00022098"
 [961] "MMT00022101" "MMT00022128"
 [963] "MMT00022137" "MMT00022140"
 [965] "MMT00022142" "MMT00022223"
 [967] "MMT00022230" "MMT00022285"
 [969] "MMT00022288" "MMT00022295"
 [971] "MMT00022313" "MMT00022453"
 [973] "MMT00022462" "MMT00022502"
 [975] "MMT00022559" "MMT00022605"
 [977] "MMT00022622" "MMT00022657"
 [979] "MMT00022665" "MMT00022673"
 [981] "MMT00022709" "MMT00022754"
 [983] "MMT00022779" "MMT00022826"
 [985] "MMT00022832" "MMT00022878"
 [987] "MMT00022891" "MMT00022897"
 [989] "MMT00022932" "MMT00022959"
 [991] "MMT00022978" "MMT00022986"
 [993] "MMT00022995" "MMT00023019"
 [995] "MMT00023027" "MMT00023079"
 [997] "MMT00023085" "MMT00023162"
 [999] "MMT00023166" "MMT00023212"
 [ reached getOption("max.print") -- omitted 2600 entries ]
> names(datExpr)[moduleColors=="brown"]
  [1] "MMT00000887" "MMT00001077"
  [3] "MMT00001185" "MMT00001486"
  [5] "MMT00002002" "MMT00002037"
  [7] "MMT00002102" "MMT00002209"
  [9] "MMT00002575" "MMT00002758"
 [11] "MMT00002824" "MMT00003081"
 [13] "MMT00003586" "MMT00003596"
 [15] "MMT00003970" "MMT00003982"
 [17] "MMT00003994" "MMT00004034"
 [19] "MMT00004170" "MMT00004283"
 [21] "MMT00004397" "MMT00004428"
 [23] "MMT00004844" "MMT00006001"
 [25] "MMT00006077" "MMT00006097"
 [27] "MMT00006230" "MMT00006315"
 [29] "MMT00006378" "MMT00006545"
 [31] "MMT00006709" "MMT00006713"
 [33] "MMT00006822" "MMT00006859"
 [35] "MMT00007042" "MMT00007205"
 [37] "MMT00007277" "MMT00007603"
 [39] "MMT00007709" "MMT00007836"
 [41] "MMT00007847" "MMT00007859"
 [43] "MMT00007963" "MMT00007995"
 [45] "MMT00008094" "MMT00008463"
 [47] "MMT00008968" "MMT00008970"
 [49] "MMT00009272" "MMT00009690"
 [51] "MMT00009857" "MMT00009951"
 [53] "MMT00010412" "MMT00010542"
 [55] "MMT00010602" "MMT00010873"
 [57] "MMT00010907" "MMT00011268"
 [59] "MMT00011876" "MMT00012202"
 [61] "MMT00012203" "MMT00012511"
 [63] "MMT00012992" "MMT00013100"
 [65] "MMT00013122" "MMT00013203"
 [67] "MMT00013227" "MMT00013704"
 [69] "MMT00013759" "MMT00014132"
 [71] "MMT00014558" "MMT00014630"
 [73] "MMT00014730" "MMT00015180"
 [75] "MMT00015289" "MMT00015334"
 [77] "MMT00015563" "MMT00015593"
 [79] "MMT00015674" "MMT00016457"
 [81] "MMT00016835" "MMT00016958"
 [83] "MMT00017188" "MMT00017203"
 [85] "MMT00017421" "MMT00017456"
 [87] "MMT00017674" "MMT00017718"
 [89] "MMT00018071" "MMT00018085"
 [91] "MMT00018374" "MMT00018479"
 [93] "MMT00018643" "MMT00018797"
 [95] "MMT00019063" "MMT00019191"
 [97] "MMT00019257" "MMT00019405"
 [99] "MMT00019744" "MMT00020088"
[101] "MMT00020374" "MMT00020598"
[103] "MMT00020770" "MMT00020883"
[105] "MMT00021004" "MMT00021090"
[107] "MMT00021275" "MMT00021643"
[109] "MMT00021734" "MMT00021743"
[111] "MMT00021805" "MMT00022098"
[113] "MMT00022230" "MMT00022657"
[115] "MMT00022754" "MMT00022932"
[117] "MMT00024107" "MMT00024150"
[119] "MMT00024300" "MMT00024492"
[121] "MMT00024851" "MMT00025030"
[123] "MMT00025048" "MMT00025256"
[125] "MMT00025527" "MMT00025842"
[127] "MMT00025886" "MMT00026028"
[129] "MMT00026117" "MMT00026255"
[131] "MMT00026611" "MMT00026638"
[133] "MMT00027064" "MMT00027170"
[135] "MMT00027378" "MMT00027530"
[137] "MMT00027663" "MMT00027667"
[139] "MMT00027763" "MMT00027861"
[141] "MMT00027989" "MMT00028002"
[143] "MMT00028568" "MMT00028633"
[145] "MMT00028763" "MMT00028861"
[147] "MMT00028979" "MMT00029126"
[149] "MMT00029192" "MMT00029369"
[151] "MMT00030150" "MMT00030176"
[153] "MMT00030229" "MMT00030448"
[155] "MMT00030465" "MMT00030541"
[157] "MMT00030781" "MMT00030800"
[159] "MMT00030931" "MMT00031029"
[161] "MMT00031086" "MMT00031229"
[163] "MMT00031263" "MMT00031585"
[165] "MMT00031586" "MMT00031617"
[167] "MMT00031650" "MMT00031751"
[169] "MMT00032175" "MMT00032542"
[171] "MMT00032545" "MMT00032680"
[173] "MMT00032840" "MMT00032920"
[175] "MMT00033105" "MMT00033171"
[177] "MMT00033222" "MMT00033268"
[179] "MMT00034286" "MMT00034467"
[181] "MMT00034709" "MMT00034792"
[183] "MMT00034839" "MMT00034916"
[185] "MMT00035158" "MMT00035243"
[187] "MMT00035724" "MMT00035984"
[189] "MMT00036340" "MMT00036739"
[191] "MMT00036954" "MMT00037447"
[193] "MMT00038270" "MMT00038471"
[195] "MMT00038915" "MMT00038934"
[197] "MMT00039183" "MMT00039459"
[199] "MMT00039764" "MMT00039882"
[201] "MMT00040496" "MMT00040765"
[203] "MMT00040888" "MMT00040982"
[205] "MMT00041088" "MMT00041166"
[207] "MMT00041314" "MMT00041355"
[209] "MMT00041665" "MMT00042929"
[211] "MMT00042972" "MMT00043411"
[213] "MMT00043537" "MMT00043939"
[215] "MMT00043964" "MMT00044287"
[217] "MMT00044996" "MMT00045252"
[219] "MMT00045344" "MMT00045751"
[221] "MMT00046778" "MMT00046836"
[223] "MMT00047127" "MMT00047197"
[225] "MMT00047418" "MMT00048209"
[227] "MMT00048535" "MMT00048720"
[229] "MMT00049092" "MMT00049111"
[231] "MMT00049221" "MMT00049383"
[233] "MMT00049553" "MMT00049556"
[235] "MMT00049743" "MMT00050031"
[237] "MMT00050086" "MMT00050363"
[239] "MMT00050552" "MMT00050576"
[241] "MMT00051177" "MMT00051278"
[243] "MMT00051292" "MMT00051303"
[245] "MMT00051523" "MMT00052337"
[247] "MMT00052658" "MMT00052695"
[249] "MMT00052859" "MMT00053210"
[251] "MMT00053218" "MMT00053489"
[253] "MMT00053497" "MMT00053545"
[255] "MMT00053917" "MMT00054261"
[257] "MMT00054422" "MMT00054464"
[259] "MMT00054735" "MMT00055005"
[261] "MMT00055132" "MMT00055391"
[263] "MMT00055441" "MMT00056362"
[265] "MMT00056584" "MMT00056716"
[267] "MMT00056798" "MMT00057508"
[269] "MMT00058021" "MMT00058158"
[271] "MMT00058222" "MMT00058752"
[273] "MMT00059202" "MMT00059241"
[275] "MMT00059258" "MMT00059782"
[277] "MMT00060094" "MMT00060423"
[279] "MMT00060443" "MMT00060559"
[281] "MMT00060760" "MMT00060952"
[283] "MMT00061101" "MMT00061203"
[285] "MMT00061256" "MMT00061313"
[287] "MMT00061484" "MMT00061509"
[289] "MMT00061586" "MMT00061735"
[291] "MMT00061739" "MMT00061815"
[293] "MMT00061857" "MMT00061884"
[295] "MMT00061892" "MMT00061998"
[297] "MMT00062460" "MMT00062787"
[299] "MMT00062990" "MMT00063198"
[301] "MMT00063359" "MMT00063470"
[303] "MMT00063623" "MMT00064235"
[305] "MMT00064433" "MMT00064617"
[307] "MMT00064719" "MMT00064851"
[309] "MMT00064897" "MMT00065001"
[311] "MMT00065115" "MMT00065116"
[313] "MMT00065159" "MMT00065770"
[315] "MMT00066884" "MMT00067008"
[317] "MMT00067079" "MMT00067105"
[319] "MMT00067156" "MMT00067261"
[321] "MMT00067296" "MMT00067525"
[323] "MMT00067823" "MMT00068494"
[325] "MMT00068509" "MMT00068530"
[327] "MMT00068861" "MMT00069165"
[329] "MMT00069425" "MMT00069884"
[331] "MMT00070201" "MMT00070277"
[333] "MMT00070342" "MMT00070429"
[335] "MMT00070618" "MMT00070677"
[337] "MMT00070750" "MMT00071052"
[339] "MMT00071242" "MMT00071411"
[341] "MMT00071664" "MMT00071772"
[343] "MMT00071856" "MMT00071857"
[345] "MMT00071976" "MMT00072042"
[347] "MMT00072057" "MMT00072237"
[349] "MMT00072411" "MMT00072657"
[351] "MMT00073157" "MMT00073211"
[353] "MMT00073308" "MMT00073344"
[355] "MMT00073365" "MMT00073735"
[357] "MMT00073829" "MMT00074488"
[359] "MMT00074499" "MMT00074523"
[361] "MMT00074527" "MMT00074580"
[363] "MMT00074886" "MMT00074990"
[365] "MMT00075171" "MMT00075402"
[367] "MMT00075556" "MMT00075754"
[369] "MMT00076056" "MMT00076233"
[371] "MMT00076371" "MMT00076382"
[373] "MMT00076602" "MMT00076754"
[375] "MMT00076864" "MMT00077152"
[377] "MMT00077244" "MMT00077345"
[379] "MMT00077649" "MMT00078015"
[381] "MMT00078110" "MMT00078258"
[383] "MMT00078486" "MMT00078698"
[385] "MMT00078723" "MMT00078816"
[387] "MMT00078851" "MMT00078976"
[389] "MMT00079074" "MMT00079144"
[391] "MMT00079155" "MMT00079156"
[393] "MMT00079213" "MMT00079316"
[395] "MMT00079723" "MMT00079874"
[397] "MMT00080695" "MMT00081019"
[399] "MMT00081127" "MMT00081171"
[401] "MMT00081331" "MMT00081375"
[403] "MMT00081436" "MMT00081571"
[405] "MMT00081975" "MMT00082041"
[407] "MMT00082551" "MMT00082712"
[409] "MMT00082759"
> annot = read.csv(file = "GeneAnnotation.csv");
> dim(annot)
[1] 23388    34
> names(annot)
 [1] "X"                       
 [2] "ID"                      
 [3] "arrayname"               
 [4] "substanceBXH"            
 [5] "gene_symbol"             
 [6] "LocusLinkID"             
 [7] "OfficialGeneSymbol"      
 [8] "OfficialGeneName"        
 [9] "LocusLinkSymbol"         
[10] "LocusLinkName"           
[11] "ProteomeShortDescription"
[12] "UnigeneCluster"          
[13] "LocusLinkCode"           
[14] "ProteomeID"              
[15] "ProteomeCode"            
[16] "SwissprotID"             
[17] "OMIMCode"                
[18] "DirectedTilingPriority"  
[19] "AlternateSymbols"        
[20] "AlternateNames"          
[21] "SpeciesID"               
[22] "cytogeneticLoc"          
[23] "Organism"                
[24] "clustername"             
[25] "reporterid"              
[26] "probeid"                 
[27] "sequenceid"              
[28] "clusterid"               
[29] "chromosome"              
[30] "startcoordinate"         
[31] "endcoordinate"           
[32] "strand"                  
[33] "sequence_3_to_5_prime"   
[34] "sequence_5_to_3_prime"   
> probes = names(datExpr)
> probes2annot = match(probes, annot$substanceBXH)
> sum(is.na(probes2annot))
[1] 0
> geneInfo0 = data.frame(substanceBXH = probes,
+                        geneSymbol = annot$gene_symbol[probes2annot],
+                        LocusLinkID = annot$LocusLinkID[probes2annot],
+                        moduleColor = moduleColors,
+                        geneTraitSignificance,
+                        GSPvalue)
> modOrder = order(-abs(cor(MEs, weight, use = "p")));
> for (mod in 1:ncol(geneModuleMembership))
+ {
+     oldNames = names(geneInfo0)
+     geneInfo0 = data.frame(geneInfo0, geneModuleMembership[, modOrder[mod]],
+                            MMPvalue[, modOrder[mod]]);
+     names(geneInfo0) = c(oldNames, paste("MM.", modNames[modOrder[mod]], sep=""),
+                          paste("p.MM.", modNames[modOrder[mod]], sep=""))
+ }
> geneOrder = order(geneInfo0$moduleColor, -abs(geneInfo0$GS.weight));
> geneInfo = geneInfo0[geneOrder, ]
> write.csv(geneInfo, file = "geneInfo.csv")
> lnames = load(file = "FemaleLiver-01-dataInput.RData");
> lnames = load(file = "FemaleLiver-02-networkConstruction-auto.RData");
> lnames
[1] "MEs"          "moduleLabels"
[3] "moduleColors" "geneTree"    
> annot = read.csv(file = "GeneAnnotation.csv");
> probes = names(datExpr)
> probes2annot = match(probes, annot$substanceBXH)
> allLLIDs = annot$LocusLinkID[probes2annot];
> intModules = c("brown", "red", "salmon")
> for (module in intModules)
+ {modGenes = (moduleColors==module)modLLIDs = allLLIDs[modGenes];
Error: unexpected symbol in:
"for (module in intModules)
{modGenes = (moduleColors==module)modLLIDs"
> intModules = c("brown", "red", "salmon")
> for (module in intModules)
+ {
+     # Select module probes
+     modGenes = (moduleColors==module)
+     # Get their entrez ID codes
+     modLLIDs = allLLIDs[modGenes];
+ 
+ fileName = paste("LocusLinkIDs-", module, ".txt", sep="");
+ write.table(as.data.frame(modLLIDs), file = fileName,
+             row.names = FALSE, col.names = FALSE)
+ }
> fileName = paste("LocusLinkIDs-all.txt", sep="");
> write.table(as.data.frame(allLLIDs), file = fileName,
+             row.names = FALSE, col.names = FALSE)
> GOenr = GOenrichmentAnalysis(moduleColors, allLLIDs, organism = "mouse", nBestP = 10);
Warning in GOenrichmentAnalysis(moduleColors, allLLIDs, organism = "mouse",  :
  This function is deprecated and will be removed in the near future. 
We suggest using the replacement function enrichmentAnalysis 
in R package anRichment, available from the following URL:
https://labs.genetics.ucla.edu/horvath/htdocs/CoexpressionNetwork/GeneAnnotation/
Loading required package: org.Mm.eg.db
Loading required package: GO.db
Loading required package: AnnotationDbi
Loading required package: stats4
Loading required package: BiocGenerics

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append,
    as.data.frame, basename,
    cbind, colnames, dirname,
    do.call, duplicated, eval,
    evalq, Filter, Find, get,
    grep, grepl, intersect,
    is.unsorted, lapply, Map,
    mapply, match, mget,
    order, paste, pmax,
    pmax.int, pmin, pmin.int,
    Position, rank, rbind,
    Reduce, rownames, sapply,
    setdiff, sort, table,
    tapply, union, unique,
    unsplit, which.max,
    which.min

Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain
    introductory material;
    view with
    'browseVignettes()'. To
    cite Bioconductor, see
    'citation("Biobase")', and
    for packages
    'citation("pkgname")'.

Loading required package: IRanges
Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname


Attaching package: ‘IRanges’

The following object is masked from ‘package:grDevices’:

    windows

Error in GOenrichmentAnalysis(moduleColors, allLLIDs, organism = "mouse",  : 
  Could not load the requisite package(s) org.Mm.eg.db . Please install the package(s).
In addition: Warning message:
In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called ‘org.Mm.eg.db’
> tab = GOenr$bestPTerms[[4]]$enrichment
Error: object 'GOenr' not found
> names(tab)
Error: object 'tab' not found
> GOenr = GOenrichmentAnalysis(moduleColors, allLLIDs, organism = "mouse", nBestP = 10);
Warning in GOenrichmentAnalysis(moduleColors, allLLIDs, organism = "mouse",  :
  This function is deprecated and will be removed in the near future. 
We suggest using the replacement function enrichmentAnalysis 
in R package anRichment, available from the following URL:
https://labs.genetics.ucla.edu/horvath/htdocs/CoexpressionNetwork/GeneAnnotation/
Loading required package: org.Mm.eg.db
Error in GOenrichmentAnalysis(moduleColors, allLLIDs, organism = "mouse",  : 
  Could not load the requisite package(s) org.Mm.eg.db . Please install the package(s).
In addition: Warning message:
In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called ‘org.Mm.eg.db’
> install.packages("org.Mm.eg.db")
WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:

https://cran.rstudio.com/bin/windows/Rtools/
Installing package into ‘C:/Users/m_kak/AppData/Local/R/win-library/4.2’
(as ‘lib’ is unspecified)
Warning in install.packages :
  package ‘org.Mm.eg.db’ is not available for this version of R

A version of this package for your version of R might be available elsewhere,
see the ideas at
https://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages
> 